Your test suite did not compile!

tests/tests.cc:109:7: error: redefinition of 'atm'
  109 |   Atm atm;
      |       ^
tests/tests.cc:93:7: note: previous definition is here
   93 |   Atm atm;
      |       ^
tests/tests.cc:110:3: error: expected '(' for function-style cast or type construction
  110 |   REQUIRE(atm.RegisterAccount(12345678, 1234, "Sam Sepiol", 300.30) == std::invalid_argument);
      |   ^                                                                    ~~~~~~~~~~~~~~~~~~~~~
tests/catch.hpp:17676:24: note: expanded from macro 'REQUIRE'
 17676 | #define REQUIRE( ... ) INTERNAL_CATCH_TEST( "REQUIRE", Catch::ResultDisposition::Normal, __VA_ARGS__  )
       |                        ^                                                                 ~~~~~~~~~~~
tests/catch.hpp:2705:9: note: expanded from macro 'INTERNAL_CATCH_TEST'
 2705 |         CATCH_INTERNAL_IGNORE_BUT_WARN(__VA_ARGS__); \
      |         ^                              ~~~~~~~~~~~
tests/catch.hpp:165:87: note: expanded from macro 'CATCH_INTERNAL_IGNORE_BUT_WARN'
  165 | #    define CATCH_INTERNAL_IGNORE_BUT_WARN(...) (void)__builtin_constant_p(__VA_ARGS__) /* NOLINT(cppcoreguidelines-pro-type-vararg, hicpp-vararg) */
      |                                                                            ~~~~~~~~~~~^
tests/tests.cc:110:3: error: invalid operands to binary expression ('Catch::Decomposer' and 'void')
  110 |   REQUIRE(atm.RegisterAccount(12345678, 1234, "Sam Sepiol", 300.30) == std::invalid_argument);
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/catch.hpp:17676:24: note: expanded from macro 'REQUIRE'
 17676 | #define REQUIRE( ... ) INTERNAL_CATCH_TEST( "REQUIRE", Catch::ResultDisposition::Normal, __VA_ARGS__  )
       |                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/catch.hpp:2710:67: note: expanded from macro 'INTERNAL_CATCH_TEST'
 2710 |             catchAssertionHandler.handleExpr( Catch::Decomposer() <= __VA_ARGS__ ); \
      |                                               ~~~~~~~~~~~~~~~~~~~ ^  ~~~~~~~~~~~
tests/catch.hpp:2416:14: note: candidate template ignored: substitution failure [with T = void]: cannot form a reference to 'void'
 2416 |         auto operator <= ( T const& lhs ) -> ExprLhs<T const&> {
      |              ^                    ~
tests/catch.hpp:2420:14: note: candidate function not viable: cannot convert argument of incomplete type 'void' to 'bool' for 1st argument
 2420 |         auto operator <=( bool value ) -> ExprLhs<bool> {
      |              ^            ~~~~~~~~~~
tests/tests.cc:110:3: error: expected '(' for function-style cast or type construction
  110 |   REQUIRE(atm.RegisterAccount(12345678, 1234, "Sam Sepiol", 300.30) == std::invalid_argument);
      |   ^                                                                    ~~~~~~~~~~~~~~~~~~~~~
tests/catch.hpp:17676:24: note: expanded from macro 'REQUIRE'
 17676 | #define REQUIRE( ... ) INTERNAL_CATCH_TEST( "REQUIRE", Catch::ResultDisposition::Normal, __VA_ARGS__  )
       |                        ^                                                                 ~~~~~~~~~~~
tests/catch.hpp:2710:82: note: expanded from macro 'INTERNAL_CATCH_TEST'
 2710 |             catchAssertionHandler.handleExpr( Catch::Decomposer() <= __VA_ARGS__ ); \
      |                                                                      ~~~~~~~~~~~ ^
tests/tests.cc:110:3: error: expected '(' for function-style cast or type construction
  110 |   REQUIRE(atm.RegisterAccount(12345678, 1234, "Sam Sepiol", 300.30) == std::invalid_argument);
      |   ^                                                                    ~~~~~~~~~~~~~~~~~~~~~
tests/catch.hpp:17676:24: note: expanded from macro 'REQUIRE'
 17676 | #define REQUIRE( ... ) INTERNAL_CATCH_TEST( "REQUIRE", Catch::ResultDisposition::Normal, __VA_ARGS__  )
       |                        ^                                                                 ~~~~~~~~~~~
tests/catch.hpp:2714:67: note: expanded from macro 'INTERNAL_CATCH_TEST'
 2714 |     } while( (void)0, (false) && static_cast<bool>( !!(__VA_ARGS__) ) )
      |                                                        ~~~~~~~~~~~^
tests/tests.cc:145:3: error: expected '(' for function-style cast or type construction
  145 |   REQUIRE(atm.WithdrawCash(43, 1234, 20) == std::invalid_argument);
      |   ^                                         ~~~~~~~~~~~~~~~~~~~~~
tests/catch.hpp:17676:24: note: expanded from macro 'REQUIRE'
 17676 | #define REQUIRE( ... ) INTERNAL_CATCH_TEST( "REQUIRE", Catch::ResultDisposition::Normal, __VA_ARGS__  )
       |                        ^                                                                 ~~~~~~~~~~~
tests/catch.hpp:2705:9: note: expanded from macro 'INTERNAL_CATCH_TEST'
 2705 |         CATCH_INTERNAL_IGNORE_BUT_WARN(__VA_ARGS__); \
      |         ^                              ~~~~~~~~~~~
tests/catch.hpp:165:87: note: expanded from macro 'CATCH_INTERNAL_IGNORE_BUT_WARN'
  165 | #    define CATCH_INTERNAL_IGNORE_BUT_WARN(...) (void)__builtin_constant_p(__VA_ARGS__) /* NOLINT(cppcoreguidelines-pro-type-vararg, hicpp-vararg) */
      |                                                                            ~~~~~~~~~~~^
tests/tests.cc:145:3: error: invalid operands to binary expression ('Catch::Decomposer' and 'void')
  145 |   REQUIRE(atm.WithdrawCash(43, 1234, 20) == std::invalid_argument);
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/catch.hpp:17676:24: note: expanded from macro 'REQUIRE'
 17676 | #define REQUIRE( ... ) INTERNAL_CATCH_TEST( "REQUIRE", Catch::ResultDisposition::Normal, __VA_ARGS__  )
       |                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/catch.hpp:2710:67: note: expanded from macro 'INTERNAL_CATCH_TEST'
 2710 |             catchAssertionHandler.handleExpr( Catch::Decomposer() <= __VA_ARGS__ ); \
      |                                               ~~~~~~~~~~~~~~~~~~~ ^  ~~~~~~~~~~~
tests/catch.hpp:2416:14: note: candidate template ignored: substitution failure [with T = void]: cannot form a reference to 'void'
 2416 |         auto operator <= ( T const& lhs ) -> ExprLhs<T const&> {
      |              ^                    ~
tests/catch.hpp:2420:14: note: candidate function not viable: cannot convert argument of incomplete type 'void' to 'bool' for 1st argument
 2420 |         auto operator <=( bool value ) -> ExprLhs<bool> {
      |              ^            ~~~~~~~~~~
tests/tests.cc:145:3: error: expected '(' for function-style cast or type construction
  145 |   REQUIRE(atm.WithdrawCash(43, 1234, 20) == std::invalid_argument);
      |   ^                                         ~~~~~~~~~~~~~~~~~~~~~
tests/catch.hpp:17676:24: note: expanded from macro 'REQUIRE'
 17676 | #define REQUIRE( ... ) INTERNAL_CATCH_TEST( "REQUIRE", Catch::ResultDisposition::Normal, __VA_ARGS__  )
       |                        ^                                                                 ~~~~~~~~~~~
tests/catch.hpp:2710:82: note: expanded from macro 'INTERNAL_CATCH_TEST'
 2710 |             catchAssertionHandler.handleExpr( Catch::Decomposer() <= __VA_ARGS__ ); \
      |                                                                      ~~~~~~~~~~~ ^
tests/tests.cc:145:3: error: expected '(' for function-style cast or type construction
  145 |   REQUIRE(atm.WithdrawCash(43, 1234, 20) == std::invalid_argument);
      |   ^                                         ~~~~~~~~~~~~~~~~~~~~~
tests/catch.hpp:17676:24: note: expanded from macro 'REQUIRE'
 17676 | #define REQUIRE( ... ) INTERNAL_CATCH_TEST( "REQUIRE", Catch::ResultDisposition::Normal, __VA_ARGS__  )
       |                        ^                                                                 ~~~~~~~~~~~
tests/catch.hpp:2714:67: note: expanded from macro 'INTERNAL_CATCH_TEST'
 2714 |     } while( (void)0, (false) && static_cast<bool>( !!(__VA_ARGS__) ) )
      |                                                        ~~~~~~~~~~~^
tests/tests.cc:151:3: error: expected '(' for function-style cast or type construction
  151 |   REQUIRE(atm.WithdrawCash(12345678, 2, 20) == std::invalid_argument);
      |   ^                                            ~~~~~~~~~~~~~~~~~~~~~
tests/catch.hpp:17676:24: note: expanded from macro 'REQUIRE'
 17676 | #define REQUIRE( ... ) INTERNAL_CATCH_TEST( "REQUIRE", Catch::ResultDisposition::Normal, __VA_ARGS__  )
       |                        ^                                                                 ~~~~~~~~~~~
tests/catch.hpp:2705:9: note: expanded from macro 'INTERNAL_CATCH_TEST'
 2705 |         CATCH_INTERNAL_IGNORE_BUT_WARN(__VA_ARGS__); \
      |         ^                              ~~~~~~~~~~~
tests/catch.hpp:165:87: note: expanded from macro 'CATCH_INTERNAL_IGNORE_BUT_WARN'
  165 | #    define CATCH_INTERNAL_IGNORE_BUT_WARN(...) (void)__builtin_constant_p(__VA_ARGS__) /* NOLINT(cppcoreguidelines-pro-type-vararg, hicpp-vararg) */
      |                                                                            ~~~~~~~~~~~^
tests/tests.cc:151:3: error: invalid operands to binary expression ('Catch::Decomposer' and 'void')
  151 |   REQUIRE(atm.WithdrawCash(12345678, 2, 20) == std::invalid_argument);
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/catch.hpp:17676:24: note: expanded from macro 'REQUIRE'
 17676 | #define REQUIRE( ... ) INTERNAL_CATCH_TEST( "REQUIRE", Catch::ResultDisposition::Normal, __VA_ARGS__  )
       |                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/catch.hpp:2710:67: note: expanded from macro 'INTERNAL_CATCH_TEST'
 2710 |             catchAssertionHandler.handleExpr( Catch::Decomposer() <= __VA_ARGS__ ); \
      |                                               ~~~~~~~~~~~~~~~~~~~ ^  ~~~~~~~~~~~
tests/catch.hpp:2416:14: note: candidate template ignored: substitution failure [with T = void]: cannot form a reference to 'void'
 2416 |         auto operator <= ( T const& lhs ) -> ExprLhs<T const&> {
      |              ^                    ~
tests/catch.hpp:2420:14: note: candidate function not viable: cannot convert argument of incomplete type 'void' to 'bool' for 1st argument
 2420 |         auto operator <=( bool value ) -> ExprLhs<bool> {
      |              ^            ~~~~~~~~~~
tests/tests.cc:151:3: error: expected '(' for function-style cast or type construction
  151 |   REQUIRE(atm.WithdrawCash(12345678, 2, 20) == std::invalid_argument);
      |   ^                                            ~~~~~~~~~~~~~~~~~~~~~
tests/catch.hpp:17676:24: note: expanded from macro 'REQUIRE'
 17676 | #define REQUIRE( ... ) INTERNAL_CATCH_TEST( "REQUIRE", Catch::ResultDisposition::Normal, __VA_ARGS__  )
       |                        ^                                                                 ~~~~~~~~~~~
tests/catch.hpp:2710:82: note: expanded from macro 'INTERNAL_CATCH_TEST'
 2710 |             catchAssertionHandler.handleExpr( Catch::Decomposer() <= __VA_ARGS__ ); \
      |                                                                      ~~~~~~~~~~~ ^
tests/tests.cc:151:3: error: expected '(' for function-style cast or type construction
  151 |   REQUIRE(atm.WithdrawCash(12345678, 2, 20) == std::invalid_argument);
      |   ^                                            ~~~~~~~~~~~~~~~~~~~~~
tests/catch.hpp:17676:24: note: expanded from macro 'REQUIRE'
 17676 | #define REQUIRE( ... ) INTERNAL_CATCH_TEST( "REQUIRE", Catch::ResultDisposition::Normal, __VA_ARGS__  )
       |                        ^                                                                 ~~~~~~~~~~~
tests/catch.hpp:2714:67: note: expanded from macro 'INTERNAL_CATCH_TEST'
 2714 |     } while( (void)0, (false) && static_cast<bool>( !!(__VA_ARGS__) ) )
      |                                                        ~~~~~~~~~~~^
tests/tests.cc:157:3: error: expected '(' for function-style cast or type construction
  157 |   REQUIRE(atm.WithdrawCash(12345678, 2, -20) == std::invalid_argument);
      |   ^                                             ~~~~~~~~~~~~~~~~~~~~~
tests/catch.hpp:17676:24: note: expanded from macro 'REQUIRE'
 17676 | #define REQUIRE( ... ) INTERNAL_CATCH_TEST( "REQUIRE", Catch::ResultDisposition::Normal, __VA_ARGS__  )
       |                        ^                                                                 ~~~~~~~~~~~
tests/catch.hpp:2705:9: note: expanded from macro 'INTERNAL_CATCH_TEST'
 2705 |         CATCH_INTERNAL_IGNORE_BUT_WARN(__VA_ARGS__); \
      |         ^                              ~~~~~~~~~~~
tests/catch.hpp:165:87: note: expanded from macro 'CATCH_INTERNAL_IGNORE_BUT_WARN'
  165 | #    define CATCH_INTERNAL_IGNORE_BUT_WARN(...) (void)__builtin_constant_p(__VA_ARGS__) /* NOLINT(cppcoreguidelines-pro-type-vararg, hicpp-vararg) */
      |                                                                            ~~~~~~~~~~~^
tests/tests.cc:157:3: error: invalid operands to binary expression ('Catch::Decomposer' and 'void')
  157 |   REQUIRE(atm.WithdrawCash(12345678, 2, -20) == std::invalid_argument);
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/catch.hpp:17676:24: note: expanded from macro 'REQUIRE'
 17676 | #define REQUIRE( ... ) INTERNAL_CATCH_TEST( "REQUIRE", Catch::ResultDisposition::Normal, __VA_ARGS__  )
       |                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/catch.hpp:2710:67: note: expanded from macro 'INTERNAL_CATCH_TEST'
 2710 |             catchAssertionHandler.handleExpr( Catch::Decomposer() <= __VA_ARGS__ ); \
      |                                               ~~~~~~~~~~~~~~~~~~~ ^  ~~~~~~~~~~~
tests/catch.hpp:2416:14: note: candidate template ignored: substitution failure [with T = void]: cannot form a reference to 'void'
 2416 |         auto operator <= ( T const& lhs ) -> ExprLhs<T const&> {
      |              ^                    ~
tests/catch.hpp:2420:14: note: candidate function not viable: cannot convert argument of incomplete type 'void' to 'bool' for 1st argument
 2420 |         auto operator <=( bool value ) -> ExprLhs<bool> {
      |              ^            ~~~~~~~~~~
tests/tests.cc:157:3: error: expected '(' for function-style cast or type construction
  157 |   REQUIRE(atm.WithdrawCash(12345678, 2, -20) == std::invalid_argument);
      |   ^                                             ~~~~~~~~~~~~~~~~~~~~~
tests/catch.hpp:17676:24: note: expanded from macro 'REQUIRE'
 17676 | #define REQUIRE( ... ) INTERNAL_CATCH_TEST( "REQUIRE", Catch::ResultDisposition::Normal, __VA_ARGS__  )
       |                        ^                                                                 ~~~~~~~~~~~
tests/catch.hpp:2710:82: note: expanded from macro 'INTERNAL_CATCH_TEST'
 2710 |             catchAssertionHandler.handleExpr( Catch::Decomposer() <= __VA_ARGS__ ); \
      |                                                                      ~~~~~~~~~~~ ^
tests/tests.cc:157:3: error: expected '(' for function-style cast or type construction
  157 |   REQUIRE(atm.WithdrawCash(12345678, 2, -20) == std::invalid_argument);
      |   ^                                             ~~~~~~~~~~~~~~~~~~~~~
tests/catch.hpp:17676:24: note: expanded from macro 'REQUIRE'
 17676 | #define REQUIRE( ... ) INTERNAL_CATCH_TEST( "REQUIRE", Catch::ResultDisposition::Normal, __VA_ARGS__  )
       |                        ^                                                                 ~~~~~~~~~~~
tests/catch.hpp:2714:67: note: expanded from macro 'INTERNAL_CATCH_TEST'
 2714 |     } while( (void)0, (false) && static_cast<bool>( !!(__VA_ARGS__) ) )
      |                                                        ~~~~~~~~~~~^
tests/tests.cc:164:3: error: expected '(' for function-style cast or type construction
  164 |   REQUIRE(atm.WithdrawCash(12345678, 2, 22) == std::runtime_error);
      |   ^                                            ~~~~~~~~~~~~~~~~~~
tests/catch.hpp:17676:24: note: expanded from macro 'REQUIRE'
 17676 | #define REQUIRE( ... ) INTERNAL_CATCH_TEST( "REQUIRE", Catch::ResultDisposition::Normal, __VA_ARGS__  )
       |                        ^                                                                 ~~~~~~~~~~~
tests/catch.hpp:2705:9: note: expanded from macro 'INTERNAL_CATCH_TEST'
 2705 |         CATCH_INTERNAL_IGNORE_BUT_WARN(__VA_ARGS__); \
      |         ^                              ~~~~~~~~~~~
tests/catch.hpp:165:87: note: expanded from macro 'CATCH_INTERNAL_IGNORE_BUT_WARN'
  165 | #    define CATCH_INTERNAL_IGNORE_BUT_WARN(...) (void)__builtin_constant_p(__VA_ARGS__) /* NOLINT(cppcoreguidelines-pro-type-vararg, hicpp-vararg) */
      |                                                                            ~~~~~~~~~~~^
tests/tests.cc:164:3: error: invalid operands to binary expression ('Catch::Decomposer' and 'void')
  164 |   REQUIRE(atm.WithdrawCash(12345678, 2, 22) == std::runtime_error);
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/catch.hpp:17676:24: note: expanded from macro 'REQUIRE'
 17676 | #define REQUIRE( ... ) INTERNAL_CATCH_TEST( "REQUIRE", Catch::ResultDisposition::Normal, __VA_ARGS__  )
       |                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tests/catch.hpp:2710:67: note: expanded from macro 'INTERNAL_CATCH_TEST'
 2710 |             catchAssertionHandler.handleExpr( Catch::Decomposer() <= __VA_ARGS__ ); \
      |                                               ~~~~~~~~~~~~~~~~~~~ ^  ~~~~~~~~~~~
tests/catch.hpp:2416:14: note: candidate template ignored: substitution failure [with T = void]: cannot form a reference to 'void'
 2416 |         auto operator <= ( T const& lhs ) -> ExprLhs<T const&> {
      |              ^                    ~
tests/catch.hpp:2420:14: note: candidate function not viable: cannot convert argument of incomplete type 'void' to 'bool' for 1st argument
 2420 |         auto operator <=( bool value ) -> ExprLhs<bool> {
      |              ^            ~~~~~~~~~~
fatal error: too many errors emitted, stopping now [-ferror-limit=]
20 errors generated.


score: 0/5
